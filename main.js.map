{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/webpack/bootstrap","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// @todo: Функция создания карточки\r\n\r\nexport function createCard(\r\n  img,\r\n  title,\r\n  functionDelCard,\r\n  handleLikeCard,\r\n  handlerOpenPopupZoom,\r\n  cardData,\r\n  currentUserId\r\n) {\r\n  const cardTemplate = document.querySelector(\"#card-template\").content;\r\n  const cardElement = cardTemplate.querySelector(\".card\").cloneNode(true);\r\n  const buttonDelCard = cardElement.querySelector(\".card__delete-button\");\r\n  const buttonLikeCard = cardElement.querySelector(\".card__like-button\");\r\n  const cardImg = cardElement.querySelector(\".card__image\");\r\n  const cardTitle = cardElement.querySelector(\".card__title\");\r\n  const likeCounter = cardElement.querySelector(\".card__like-number\");\r\n\r\n  cardImg.src = img;\r\n  cardImg.alt = title;\r\n  cardTitle.textContent = title;\r\n\r\n  //подгружаем кол-во лайков с сервера\r\n  likeCounter.textContent = cardData.likes.length;\r\n\r\n  //проверяем есть ли наши лайки, если есть то красим сердце в черный\r\n  if (cardData.likes.some((like) => like._id === currentUserId)) {\r\n    buttonLikeCard.classList.add(\"card__like-button_is-active\");\r\n  }\r\n\r\n  // проверка на владельца карточки\r\n  if (cardData.owner._id !== currentUserId) {\r\n    buttonDelCard.remove(); // Удаляем кнопку, если карточка создана не нами\r\n  } else {\r\n    // Вешаем событие только на свои карточки\r\n    buttonDelCard.addEventListener(\"click\", () =>\r\n      functionDelCard(cardElement, cardData._id)\r\n    );\r\n  }\r\n\r\n  buttonLikeCard.addEventListener(\"click\", () => {\r\n    const isLiked = buttonLikeCard.classList.contains(\r\n      \"card__like-button_is-active\"\r\n    );\r\n    handleLikeCard(cardElement, cardData._id, isLiked);\r\n  });\r\n  cardImg.addEventListener(\"click\", handlerOpenPopupZoom);\r\n\r\n  return cardElement;\r\n}\r\n\r\n// @todo: Функция удаления карточки\r\n\r\n// export function delCard(evt) {\r\n//   evt.target.closest(\".card\").remove();\r\n// }\r\n\r\n//лайк карточки\r\n// export function likeCard(evt) {\r\n//   if (evt.target.classList.contains(\"card__like-button\")) {\r\n//     evt.target.classList.toggle(\"card__like-button_is-active\");\r\n//   }\r\n// }\r\n","export const config = {\r\n  baseUrl: \"https://mesto.nomoreparties.co/v1/wff-cohort-21\",\r\n  headers: {\r\n    authorization: \"adfb87df-3032-40f6-8edf-de055a5b3295\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\n//спиннер\r\nfunction renderLoading(isLoading) {\r\n  const textBtnSave = document.querySelector(\".popup__button_text\");\r\n  const textBtnSaveLoading = document.querySelector(\r\n    \".popup__button_text-loading\"\r\n  );\r\n\r\n  if (isLoading) {\r\n    textBtnSaveLoading.classList.add(\"popup__button_text_loading-visible\");\r\n    textBtnSave.classList.add(\"popup__button_text-hidden\");\r\n  } else {\r\n    textBtnSaveLoading.classList.remove(\"popup__button_text_loading-visible\");\r\n    textBtnSave.classList.remove(\"popup__button_text-hidden\");\r\n  }\r\n}\r\n\r\n//запрос на сервер для получения обьекта с первоначальными данными пользователя\r\nexport const getInitialUser = () => {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers,\r\n  })\r\n    .then((res) => {\r\n      if (!res.ok) {\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      }\r\n      return res.json();\r\n    })\r\n    .then((result) => {\r\n      console.log(result);\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    });\r\n};\r\n\r\n//запрос на сервер для получения массива обьектов с данными карточек других пользователей\r\nexport const getCardsDescription = () => {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers,\r\n  })\r\n    .then((res) => {\r\n      if (!res.ok) {\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      }\r\n      return res.json();\r\n    })\r\n    .then((result) => {\r\n      console.log(result);\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    });\r\n};\r\n\r\n// Функция для обновления профиля на сервере\r\nexport const renameUserData = (name, about) => {\r\n  renderLoading(true);\r\n\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: name,\r\n      about: about,\r\n    }),\r\n  })\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        return Promise.reject(`Ошибка: ${response.status}`);\r\n      }\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      console.log(\"Профиль обновлен:\", data);\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      console.error(\"Ошибка при обновлении профиля:\", err);\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false);\r\n    });\r\n};\r\n\r\n//запрос на сервер для удаления карточки\r\nexport const deleteCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  })\r\n    .then((res) => {\r\n      if (!res.ok) {\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      }\r\n      return res.json();\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    });\r\n};\r\n\r\n//запрос на сервер для установки лайка\r\nexport const addLikeCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: \"PUT\",\r\n    headers: config.headers,\r\n  })\r\n    .then((res) => {\r\n      if (!res.ok) {\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      }\r\n      return res.json();\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    });\r\n};\r\n\r\n//запрос на сервер для удаления лайка\r\nexport const delLikeCard = (cardId) => {\r\n  return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n    method: \"DELETE\",\r\n    headers: config.headers,\r\n  })\r\n    .then((res) => {\r\n      if (!res.ok) {\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      }\r\n      return res.json();\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    });\r\n};\r\n\r\n//запрос на сервер с данными нового аватара\r\nexport const changeAvatar = (avatar) => {\r\n  renderLoading(true);\r\n\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    method: \"PATCH\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      avatar: avatar,\r\n    }),\r\n  })\r\n    .then((res) => {\r\n      if (!res.ok) {\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      }\r\n      return res.json();\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false);\r\n    });\r\n};\r\n\r\n//функция проверки действительности и URL изображения\r\nexport const checkImageUrl = (url) => {\r\n  return fetch(url, { method: \"HEAD\" })\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        return Promise.reject(`Ошибка: ${response.status}`);\r\n      }\r\n\r\n      // Проверка на url\r\n      const contentType = response.headers.get(\"Content-Type\");\r\n      if (contentType && contentType.startsWith(\"image/\")) {\r\n        return true;\r\n      } else {\r\n        return Promise.reject(\"Ошибка: Это не url\");\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error:\", error);\r\n      return false;\r\n    });\r\n};\r\n","export const validationConfig = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"popup__button_submit_inactive\",\r\n  inputErrorClass: \"popup__input_type_error\",\r\n  errorClass: \"popup__input-error_active\",\r\n};\r\n\r\nconst showInputError = (formElement, inputElement, errorMessage) => {\r\n  // Находим элемент ошибки внутри самой функции\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  // Остальной код такой же\r\n  inputElement.classList.add(validationConfig.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n};\r\n\r\nconst hideInputError = (formElement, inputElement) => {\r\n  // Находим элемент ошибки\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  // Остальной код такой же\r\n  inputElement.classList.remove(validationConfig.inputErrorClass);\r\n  errorElement.classList.remove(validationConfig.errorClass);\r\n  errorElement.textContent = \"\";\r\n};\r\n\r\n// Функция принимает массив полей\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  // проходим по этому массиву методом some\r\n  return inputList.some((inputElement) => {\r\n    // Если поле не валидно, колбэк вернёт true\r\n    // Обход массива прекратится и вся функция\r\n    // hasInvalidInput вернёт true\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\n// Функция isValid теперь принимает formElement и inputElement,\r\n// а не берёт их из внешней области видимости\r\n\r\nconst isValid = (formElement, inputElement) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    // встроенный метод setCustomValidity принимает на вход строку\r\n    // и заменяет ею стандартное сообщение об ошибке\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    // если передать пустую строку, то будут доступны\r\n    // стандартные браузерные сообщения\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n\r\n  if (!inputElement.validity.valid) {\r\n    // теперь, если ошибка вызвана регулярным выражением,\r\n    // переменная validationMessage хранит наше кастомное сообщение\r\n    showInputError(formElement, inputElement, inputElement.validationMessage);\r\n  } else {\r\n    hideInputError(formElement, inputElement);\r\n  }\r\n};\r\n\r\n// Функция принимает массив полей ввода\r\n// и элемент кнопки, состояние которой нужно менять\r\n\r\nconst toggleButtonState = (inputList, buttonElement) => {\r\n  // Если есть хотя бы один невалидный инпут\r\n  if (hasInvalidInput(inputList)) {\r\n    // сделай кнопку неактивной\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n  } else {\r\n    // иначе сделай кнопку активной\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n  }\r\n};\r\n\r\nconst setEventListeners = (formElement, validationConfig) => {\r\n  // Находим все поля внутри формы,\r\n  // сделаем из них массив методом Array.from\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(validationConfig.inputSelector)\r\n  );\r\n  const buttonElement = formElement.querySelector(\r\n    validationConfig.submitButtonSelector\r\n  );\r\n  // Вызовем toggleButtonState и передадим ей массив полей и кнопку\r\n  toggleButtonState(inputList, buttonElement);\r\n  // Обойдём все элементы полученной коллекции\r\n  inputList.forEach((inputElement) => {\r\n    // каждому полю добавим обработчик события input\r\n    inputElement.addEventListener(\"input\", () => {\r\n      // Внутри колбэка вызовем isValid,\r\n      // передав ей форму и проверяемый элемент\r\n      isValid(formElement, inputElement);\r\n      // Вызовем toggleButtonState и передадим ей массив полей и кнопку\r\n      toggleButtonState(inputList, buttonElement);\r\n    });\r\n  });\r\n};\r\n\r\nexport const enableValidation = (validationConfig) => {\r\n  // Найдём все формы с указанным классом в DOM,\r\n  // сделаем из них массив методом Array.from\r\n  const formList = Array.from(\r\n    document.querySelectorAll(validationConfig.formSelector)\r\n  );\r\n  // Переберём полученную коллекцию\r\n  formList.forEach((formElement) => {\r\n    // Для каждой формы вызовем функцию setEventListeners,\r\n    // передав ей элемент формы\r\n    setEventListeners(formElement, validationConfig);\r\n  });\r\n};\r\n\r\n// Функция clearValidation, которая очищает\r\n// ошибки валидации формы и делает кнопку отправки формы неактивной\r\n\r\n// Пройтись по всем элементам формы и удалить текст ошибок валидации\r\n// Убрать класс ошибок у соответствующих полей\r\n// Деактивировать кнопку отправки формы\r\n\r\nexport function clearValidation(formElement, validationConfig) {\r\n  // Удаляем текст ошибок валидации и классы ошибок у полей ввода\r\n  const inputElements = Array.from(\r\n    formElement.querySelectorAll(validationConfig.inputSelector)\r\n  );\r\n  inputElements.forEach((inputElement) => {\r\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n    inputElement.classList.remove(validationConfig.inputErrorClass);\r\n    errorElement.textContent = \"\";\r\n    errorElement.classList.remove(validationConfig.errorClass);\r\n  });\r\n\r\n  // Деактивируем кнопку отправки формы\r\n  const submitButton = formElement.querySelector(\r\n    validationConfig.submitButtonSelector\r\n  );\r\n  submitButton.classList.add(validationConfig.inactiveButtonClass);\r\n  submitButton.disabled = true;\r\n}\r\n","// функция открытия попапа\r\nexport function openPopup(popup) {\r\n  document.addEventListener(\"keydown\", closePopupEsc);\r\n  popup.classList.add(\"popup_is-opened\");\r\n}\r\n\r\n// функция закрытия попапа\r\nexport function closePopup(popup) {\r\n  document.removeEventListener(\"keydown\", closePopupEsc);\r\n  popup.classList.remove(\"popup_is-opened\");\r\n}\r\n\r\n// функция закрытия попапа нажатием на оверлей\r\nexport function closePopupOverlay(event) {\r\n      if (event.target === event.currentTarget) {\r\n        closePopup(event.currentTarget);\r\n      }\r\n    };\r\n\r\n// функция закрытия попапа нажатием на Esc\r\nexport function closePopupEsc(event) {\r\n  if (event.key === \"Escape\") {\r\n    const popupOpened = document.querySelector(\".popup_is-opened\");\r\n    closePopup(popupOpened);\r\n  }\r\n}","import { createCard, delCard, likeCard } from \"../components/card.js\";\r\n\r\nimport {\r\n  config,\r\n  getInitialUser,\r\n  getCardsDescription,\r\n  renameUserData,\r\n  deleteCard,\r\n  addLikeCard,\r\n  delLikeCard,\r\n  changeAvatar,\r\n  checkImageUrl,\r\n} from \"../components/api.js\";\r\n\r\nimport {\r\n  validationConfig,\r\n  enableValidation,\r\n  clearValidation,\r\n} from \"../components/validation.js\";\r\n\r\nimport {\r\n  openPopup,\r\n  closePopup,\r\n  closePopupOverlay,\r\n} from \"../components/modal.js\";\r\n\r\nlet currentCardElement = null; // Переменная для хранения текущей карточки\r\n\r\nconst popupEditButtonOpen = document.querySelector(\".profile__edit-button\");\r\nconst popupNewCardButtonOpen = document.querySelector(\".profile__add-button\");\r\n\r\nconst popupEdit = document.querySelector(\".popup_type_edit\");\r\nconst popupAvatarUpdate = document.querySelector(\".popup_type_update-avatar\");\r\nconst popupDelCardQuestion = document.querySelector(\".popup_type_question\");\r\nconst popupNewCard = document.querySelector(\".popup_type_new-card\");\r\nconst popupZoom = document.querySelector(\".popup_type_image\");\r\n\r\nconst updateAvatarForm = document.querySelector(\r\n  \".popup__form_type_update-avatar\"\r\n);\r\n\r\nconst popupZoomImg = document.querySelector(\".popup__image\");\r\nconst popupZoomTitle = document.querySelector(\".popup__caption\");\r\n\r\nconst popupInputNewCardTitle = document.querySelector(\r\n  \".popup__input_type_card-name\"\r\n);\r\nconst popupInputNewCardImg = document.querySelector(\".popup__input_type_url\");\r\n\r\nconst profileAvatarImg = document.querySelector(\".profile__image\");\r\nconst profileInfoTitle = document.querySelector(\".profile__title\");\r\nconst profileInfoDescription = document.querySelector(\".profile__description\");\r\n\r\n// Находим форму в DOM\r\nconst formElement = document.querySelector(\".popup__form\");\r\nconst formCreateNC = document.forms.newplace;\r\n\r\n// Находим поля формы в DOM\r\nconst nameInput = formElement.querySelector(\".popup__input_type_name\");\r\nconst jobInput = formElement.querySelector(\".popup__input_type_description\");\r\n\r\nconst avatarInput = document.querySelector(\".popup__input_type_update-avatar\");\r\n\r\n// @todo: DOM узлы\r\n\r\nconst cardsContainer = document.querySelector(\".places__list\");\r\n\r\n// @todo: Вывести карточки на страницу\r\n\r\n// Функция добавления карточки на страницу\r\nfunction addCard(cardsDataArray, currentUserId) {\r\n  cardsDataArray.forEach((cardData) => {\r\n    const cardImg = cardData.link;\r\n    const cardTitle = cardData.name;\r\n\r\n    const card = createCard(\r\n      cardImg,\r\n      cardTitle,\r\n      handleOpenDeletePopup,\r\n      handleLikeCard,\r\n      handleOpenPopupZoom,\r\n      cardData,\r\n      currentUserId\r\n    );\r\n    cardsContainer.append(card);\r\n  });\r\n}\r\n\r\n//функция открытия попапа просмотра фото\r\nfunction openPopupZoom(imageSrc, titleText) {\r\n  popupZoomImg.src = imageSrc;\r\n  popupZoomImg.alt = titleText;\r\n  popupZoomTitle.textContent = titleText;\r\n\r\n  openPopup(popupZoom);\r\n}\r\n\r\n//Обработчик открытия попапа увеличения фото\r\nfunction handleOpenPopupZoom(event) {\r\n  const cardImg = event.target;\r\n\r\n  const card = cardImg.closest(\".card\");\r\n  const cardTitle = card.querySelector(\".card__title\").textContent;\r\n\r\n  openPopupZoom(cardImg.src, cardTitle);\r\n}\r\n\r\n// добавления слушателей и функции закрытия нажатием на крестик\r\nfunction addListenersclosePopup() {\r\n  const popupList = document.querySelectorAll(\".popup\");\r\n  const popupBtnCloseList = document.querySelectorAll(\".popup__close\");\r\n\r\n  popupBtnCloseList.forEach((popupBtn, index) => {\r\n    popupBtn.addEventListener(\"click\", () => {\r\n      closePopup(popupList[index]);\r\n    });\r\n  });\r\n}\r\n\r\n// добавления слушателей и функции закрытия попапа нажатием на оверлей\r\nfunction addListenersclosePopupOverlay() {\r\n  const popupList = Array.from(document.querySelectorAll(\".popup\"));\r\n\r\n  popupList.forEach((popupItem) => {\r\n    popupItem.addEventListener(\"mousedown\", closePopupOverlay);\r\n  });\r\n}\r\n\r\n//функция открытия попапа редактирования\r\nfunction openPopupEdit() {\r\n  nameInput.value = profileInfoTitle.textContent;\r\n  jobInput.value = profileInfoDescription.textContent;\r\n\r\n  nameInput.textContent = profileInfoTitle.value;\r\n  jobInput.textContent = profileInfoDescription.value;\r\n  clearValidation(formElement, validationConfig);\r\n  openPopup(popupEdit);\r\n}\r\n\r\n//функция открытия попапа создания новой карточки\r\nfunction openPopupNewCard() {\r\n  popupInputNewCardImg.value = \"\";\r\n  popupInputNewCardTitle.value = \"\";\r\n  clearValidation(formCreateNC, validationConfig);\r\n  openPopup(popupNewCard);\r\n}\r\n\r\n//слушатель открытия попапа редактирования\r\npopupEditButtonOpen.addEventListener(\"click\", openPopupEdit);\r\n\r\n//слушатель открытия попапа смены аватара\r\nprofileAvatarImg.addEventListener(\"click\", () => openPopup(popupAvatarUpdate));\r\n\r\n//слушатель открытия попапа создания новой карточки\r\npopupNewCardButtonOpen.addEventListener(\"click\", openPopupNewCard);\r\n\r\n//слушатель создания новой карточки\r\nformCreateNC.addEventListener(\"submit\", createNewCard);\r\n\r\n// Прикрепляем обработчик к форме:\r\n// он будет следить за событием “submit” - «отправка»\r\nformElement.addEventListener(\"submit\", handleEditFormSubmit);\r\n\r\n//добавление слушателей закрытия попапа нажатием на крестик\r\naddListenersclosePopup();\r\n\r\n//вызов функции закрытия попапа нажатием на оверлей\r\naddListenersclosePopupOverlay();\r\n\r\n// Вызовем функцию\r\n// включение валидации вызовом enableValidation\r\n// все настройки передаются при вызове\r\nenableValidation(validationConfig);\r\n\r\n//спиннер\r\nfunction renderLoading(isLoading) {\r\n  const textBtnSave = document.querySelector(\".popup__button_text\");\r\n  const textBtnSaveLoading = document.querySelector(\r\n    \".popup__button_text-loading\"\r\n  );\r\n\r\n  if (isLoading) {\r\n    textBtnSaveLoading.classList.add(\"popup__button_text_loading-visible\");\r\n    textBtnSave.classList.add(\"popup__button_text-hidden\");\r\n  } else {\r\n    textBtnSaveLoading.classList.remove(\"popup__button_text_loading-visible\");\r\n    textBtnSave.classList.remove(\"popup__button_text-hidden\");\r\n  }\r\n}\r\n\r\n// Функция для обновления информации профиля\r\nfunction updateProfileInfo(name, about, avatar) {\r\n  profileInfoTitle.textContent = name;\r\n  profileInfoDescription.textContent = about;\r\n  profileAvatarImg.style.backgroundImage = `url('${avatar}')`;\r\n}\r\n\r\nPromise.all([getInitialUser(), getCardsDescription()])\r\n  .then(([dataUser, dataCards]) => {\r\n    const currentUserId = dataUser._id; //мой id\r\n\r\n    // Обновляем информацию о пользователе\r\n    updateProfileInfo(dataUser.name, dataUser.about, dataUser.avatar);\r\n    addCard(dataCards, currentUserId);\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  });\r\n\r\n// Обработчик изменения данных профиль и «отправки» формы\r\nfunction handleEditFormSubmit(evt) {\r\n  evt.preventDefault(); // Эта строчка отменяет стандартную отправку формы.\r\n\r\n  // Получите значение полей jobInput и nameInput из свойства value\r\n  const nameInputValue = nameInput.value;\r\n  const jobInputValue = jobInput.value;\r\n\r\n  renameUserData(nameInputValue, jobInputValue).then((updatedData) => {\r\n    // Обновление DOM с новыми данными профиля\r\n    profileInfoTitle.textContent = updatedData.name;\r\n    profileInfoDescription.textContent = updatedData.about;\r\n  });\r\n  closePopup(popupEdit);\r\n}\r\n\r\n//функция создания новой карточки\r\nfunction createNewCard(evt) {\r\n  evt.preventDefault();\r\n\r\n  // Получаем значения полей\r\n  const cardImg = popupInputNewCardImg.value;\r\n  const cardTitle = popupInputNewCardTitle.value;\r\n\r\n  renderLoading(true);\r\n\r\n  // Отправляем POST-запрос на сервер для создания новой карточки\r\n  fetch(`${config.baseUrl}/cards`, {\r\n    method: \"POST\",\r\n    headers: config.headers,\r\n    body: JSON.stringify({\r\n      name: cardTitle,\r\n      link: cardImg,\r\n    }),\r\n  })\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        return Promise.reject(`Ошибка: ${response.status}`);\r\n      }\r\n      console.log(response);\r\n      return response.json();\r\n    })\r\n    .then((newCardData) => {\r\n      // Создаем карточку с использованием данных из ответа сервера\r\n      const card = createCard(\r\n        newCardData.link,\r\n        newCardData.name,\r\n        handleOpenDeletePopup,\r\n        handleLikeCard,\r\n        handleOpenPopupZoom,\r\n        newCardData,\r\n        newCardData.owner._id\r\n      );\r\n\r\n      // Добавляем карточку в контейнер\r\n      cardsContainer.prepend(card);\r\n\r\n      // Обнуляем поля ввода\r\n      popupInputNewCardImg.value = \"\";\r\n      popupInputNewCardTitle.value = \"\";\r\n      clearValidation(formCreateNC, validationConfig);\r\n\r\n      // Закрываем попап после добавления карточки\r\n      closePopup(popupNewCard);\r\n    })\r\n    .catch((err) => {\r\n      console.error(\"Ошибка при добавлении карточки на сервер:\", err);\r\n    })\r\n    .finally(() => {\r\n      renderLoading(false);\r\n    });\r\n}\r\n\r\n//функция обработчик открытия попапа подтверждения удаления\r\nfunction handleOpenDeletePopup(cardElement, cardId) {\r\n  currentCardElement = { element: cardElement, id: cardId };\r\n  openPopup(popupDelCardQuestion); // Открываем попап подтверждения\r\n}\r\n\r\n//функция обработчик удаления карточки\r\nfunction handleDeleteCardSubmit(evt) {\r\n  evt.preventDefault(); // Предотвращаем стандартную отправку формы\r\n\r\n  if (currentCardElement) {\r\n    deleteCard(currentCardElement.id)\r\n      .then(() => {\r\n        currentCardElement.element.remove(); // Удаляем карточку из DOM\r\n        closePopup(popupDelCardQuestion); // Закрываем попап после успешного удаления\r\n      })\r\n      .catch((err) => {\r\n        console.error(`Ошибка при удалении карточки: ${err}`);\r\n      });\r\n  }\r\n}\r\n\r\n// Слушатель на подтверждение удаления карточки\r\npopupDelCardQuestion.addEventListener(\"submit\", handleDeleteCardSubmit);\r\n\r\n//функция обработчик установки/удаления лайка\r\nfunction handleLikeCard(cardElement, cardId, isLiked) {\r\n  const likeButton = cardElement.querySelector(\".card__like-button\");\r\n  const likeCounter = cardElement.querySelector(\".card__like-number\");\r\n\r\n  if (isLiked) {\r\n    delLikeCard(cardId)\r\n      .then((updatedCard) => {\r\n        likeButton.classList.remove(\"card__like-button_is-active\");\r\n        likeCounter.textContent = updatedCard.likes.length;\r\n      })\r\n      .catch((err) => {\r\n        console.error(`Ошибка при удалении лайка: ${err}`);\r\n      });\r\n  } else {\r\n    addLikeCard(cardId)\r\n      .then((updatedCard) => {\r\n        likeButton.classList.add(\"card__like-button_is-active\");\r\n        likeCounter.textContent = updatedCard.likes.length;\r\n      })\r\n      .catch((err) => {\r\n        console.error(`Ошибка при добавлении лайка: ${err}`);\r\n      });\r\n  }\r\n}\r\n\r\n//функция обработчик смены аватара\r\nfunction handleAvatarChange(evt) {\r\n  evt.preventDefault(); // Эта строчка отменяет стандартную отправку формы.\r\n\r\n  const avatarInputValue = avatarInput.value;\r\n\r\n  // Проверяем URL перед обновлением аватара\r\n  checkImageUrl(avatarInputValue).then((isValid) => {\r\n    if (isValid) {\r\n      changeAvatar(avatarInputValue).then((updatedData) => {\r\n        profileAvatarImg.style.backgroundImage = `url('${updatedData.avatar}`;\r\n\r\n        avatarInput.value = \"\";\r\n        closePopup(popupAvatarUpdate);\r\n      });\r\n    } else {\r\n      console.error(\"Указанный URL-адрес не является допустимым.\");\r\n    }\r\n  });\r\n}\r\n\r\nupdateAvatarForm.addEventListener(\"submit\", handleAvatarChange);\r\n"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","createCard","img","title","functionDelCard","handleLikeCard","handlerOpenPopupZoom","cardData","currentUserId","cardElement","document","querySelector","content","cloneNode","buttonDelCard","buttonLikeCard","cardImg","cardTitle","likeCounter","src","alt","textContent","likes","length","some","like","_id","classList","add","owner","remove","addEventListener","isLiked","contains","config","baseUrl","headers","authorization","renderLoading","isLoading","textBtnSave","textBtnSaveLoading","validationConfig","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","isValid","formElement","inputElement","validity","patternMismatch","setCustomValidity","dataset","errorMessage","valid","errorElement","concat","id","hideInputError","showInputError","validationMessage","toggleButtonState","inputList","buttonElement","hasInvalidInput","disabled","clearValidation","Array","from","querySelectorAll","forEach","submitButton","openPopup","popup","closePopupEsc","closePopup","removeEventListener","closePopupOverlay","event","target","currentTarget","key","popupList","currentCardElement","popupEditButtonOpen","popupNewCardButtonOpen","popupEdit","popupAvatarUpdate","popupDelCardQuestion","popupNewCard","popupZoom","updateAvatarForm","popupZoomImg","popupZoomTitle","popupInputNewCardTitle","popupInputNewCardImg","profileAvatarImg","profileInfoTitle","profileInfoDescription","formCreateNC","forms","newplace","nameInput","jobInput","avatarInput","cardsContainer","handleOpenPopupZoom","imageSrc","titleText","closest","handleOpenDeletePopup","cardId","element","likeButton","fetch","method","then","res","ok","json","Promise","reject","status","catch","err","console","error","delLikeCard","updatedCard","addLikeCard","value","evt","preventDefault","body","JSON","stringify","name","link","response","log","newCardData","card","prepend","finally","about","data","updatedData","popupBtn","index","popupItem","setEventListeners","enableValidation","all","result","_ref","avatar","_ref2","dataUser","dataCards","style","backgroundImage","cardsDataArray","append","addCard","url","avatarInputValue","contentType","get","startsWith"],"sourceRoot":""}