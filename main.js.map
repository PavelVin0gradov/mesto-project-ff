{"version":3,"file":"main.js","mappings":"mBAEO,SAASA,EAAWC,EAAKC,EAAOC,EAAiBC,EAAkBC,GACxE,IAAMC,EAAeC,SAASC,cAAc,kBAAkBC,QACxDC,EAAiBH,SAASC,cAAc,iBACxCG,EAAcL,EAAaE,cAAc,SAASI,WAAU,GAC5DC,EAAgBF,EAAYH,cAAc,wBAC1CM,EAAUH,EAAYH,cAAc,gBACpCO,EAAYJ,EAAYH,cAAc,gBAU5C,OARAM,EAAQE,IAAMf,EACda,EAAQG,IAAMf,EACda,EAAUG,YAAchB,EAExBW,EAAcM,iBAAiB,QAAShB,GACxCO,EAAeS,iBAAiB,QAASf,GACzCU,EAAQK,iBAAiB,QAASd,GAE3BM,CACT,CAIO,SAASS,EAAQC,GACtBA,EAAIC,OAAOC,QAAQ,SAASC,QAC9B,CAGO,SAASC,EAASJ,GACnBA,EAAIC,OAAOI,UAAUC,SAAS,sBAChCN,EAAIC,OAAOI,UAAUE,OAAO,8BAEhC,CC/BO,SAASC,EAAUC,GACxBvB,SAASY,iBAAiB,UAAWY,GACrCD,EAAMJ,UAAUM,IAAI,kBACtB,CAGO,SAASC,EAAWH,GACzBvB,SAAS2B,oBAAoB,UAAWH,GACxCD,EAAMJ,UAAUF,OAAO,kBACzB,CAGO,SAASW,EAAkBC,GACxBA,EAAMd,SAAWc,EAAMC,eACzBJ,EAAWG,EAAMC,cAErB,CAGG,SAASN,EAAcK,GACV,WAAdA,EAAME,KAERL,EADoB1B,SAASC,cAAc,oBAG/C,CCXA,IA2FQ+B,EA3FFC,EAAsBjC,SAASC,cAAc,yBAC7CiC,EAAyBlC,SAASC,cAAc,wBAEhDkC,EAAYnC,SAASC,cAAc,oBACnCmC,EAAepC,SAASC,cAAc,wBACtCoC,EAAYrC,SAASC,cAAc,qBAEnCqC,EAAetC,SAASC,cAAc,iBACtCsC,EAAiBvC,SAASC,cAAc,mBAExCuC,EAAyBxC,SAASC,cACtC,gCAEIwC,EAAuBzC,SAASC,cAAc,0BAE9CyC,EAAmB1C,SAASC,cAAc,mBAC1C0C,EAAyB3C,SAASC,cACtC,yBAII2C,EAAc5C,SAASC,cAAc,gBACrC4C,EAAe7C,SAAS8C,MAAMC,SAG9BC,EAAYJ,EAAY3C,cAAc,2BACtCgD,EAAWL,EAAY3C,cAC3B,kCAKIE,EAAiBH,SAASC,cAAc,iBAyB9C,SAASiD,EAAoBrB,GAE3B,IAZqBsB,EAAUC,EAYzB7C,EAAUsB,EAAMd,OAGhBP,EADOD,EAAQS,QAAQ,SACNf,cAAc,gBAAgBU,YAfhCwC,EAiBP5C,EAAQE,IAjBS2C,EAiBJ5C,EAf3B8B,EAAa7B,IAAM0C,EACnBb,EAAa5B,IAAM0C,EACnBb,EAAe5B,YAAcyC,EAE7B9B,EAAUe,EAYZ,CA4EAJ,EAAoBrB,iBAAiB,SA9BrC,WACEoC,EAAUK,MAAQX,EAAiB/B,YACnCsC,EAASI,MAAQV,EAAuBhC,YAExCqC,EAAUrC,YAAc+B,EAAiBW,MACzCJ,EAAStC,YAAcgC,EAAuBU,MAC9C/B,EAAUa,EACZ,IA0BAD,EAAuBtB,iBAAiB,SARxC,WACEU,EAAUc,EACZ,IASAS,EAAajC,iBAAiB,UA/E9B,SAAuBE,GACrBA,EAAIwC,iBAIJ,IAMMC,EAAO9D,EANGgD,EAAqBY,MACnBb,EAAuBa,MAKGxC,EAASK,EAAUgC,GAC/D/C,EAAeqD,QAAQD,GAGvBd,EAAqBY,MAAQ,GAC7Bb,EAAuBa,MAAQ,GAE/B3B,EAAWU,EACb,IAgEAQ,EAAYhC,iBAAiB,UA7B7B,SAA8BE,GAC5BA,EAAIwC,iBAGJ,IAAMG,EAAiBT,EAAUK,MAC3BK,EAAgBT,EAASI,MAG/BX,EAAiB/B,YAAc8C,EAC/Bd,EAAuBhC,YAAc+C,EACrChC,EAAWS,EACb,IA1CQH,EAAYhC,SAAS2D,iBAAiB,UAClB3D,SAAS2D,iBAAiB,iBAElCC,SAAQ,SAACC,EAAUC,GACnCD,EAASjD,iBAAiB,SAAS,WACjCc,EAAWM,EAAU8B,GACvB,GACF,IChH0B,CACxB,CACEC,KAAM,QACNC,KAAM,iFAER,CACED,KAAM,sBACNC,KAAM,6FAER,CACED,KAAM,UACNC,KAAM,kFAER,CACED,KAAM,WACNC,KAAM,oFAER,CACED,KAAM,qBACNC,KAAM,6FAER,CACED,KAAM,SACNC,KAAM,kFD4BKJ,SAAQ,SAACK,GACtB,IAGMV,EAAO9D,EAHGwE,EAASD,KACPC,EAASF,KAEiBlD,EAASK,EAAUgC,GAC/D/C,EAAe+D,OAAOX,EACxB,IA4DkBY,MAAMC,KAAKpE,SAAS2D,iBAAiB,WAE7CC,SAAQ,SAACS,GACjBA,EAAUzD,iBAAiB,YAAagB,EAC1C,G","sources":["webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/scripts/index.js","webpack://mesto-project-ff/./src/scripts/cards.js"],"sourcesContent":["// @todo: Функция создания карточки\r\n\r\nexport function createCard(img, title, functionDelCard, functionLikeCard, handlerOpenPopupZoom) {\r\n  const cardTemplate = document.querySelector(\"#card-template\").content;\r\n  const cardsContainer = document.querySelector(\".places__list\");\r\n  const cardElement = cardTemplate.querySelector(\".card\").cloneNode(true);\r\n  const buttonDelCard = cardElement.querySelector(\".card__delete-button\");\r\n  const cardImg = cardElement.querySelector(\".card__image\");\r\n  const cardTitle = cardElement.querySelector(\".card__title\");\r\n\r\n  cardImg.src = img;\r\n  cardImg.alt = title;\r\n  cardTitle.textContent = title;\r\n\r\n  buttonDelCard.addEventListener(\"click\", functionDelCard);\r\n  cardsContainer.addEventListener(\"click\", functionLikeCard);\r\n  cardImg.addEventListener(\"click\", handlerOpenPopupZoom);\r\n\r\n  return cardElement;\r\n}\r\n\r\n// @todo: Функция удаления карточки\r\n\r\nexport function delCard(evt) {\r\n  evt.target.closest(\".card\").remove();\r\n}\r\n\r\n//лайк карточки\r\nexport function likeCard(evt) {\r\n  if (evt.target.classList.contains(\"card__like-button\")) {\r\n    evt.target.classList.toggle(\"card__like-button_is-active\");\r\n  }\r\n}\r\n","// функция открытия попапа\r\nexport function openPopup(popup) {\r\n  document.addEventListener(\"keydown\", closePopupEsc);\r\n  popup.classList.add(\"popup_is-opened\");\r\n}\r\n\r\n// функция закрытия попапа\r\nexport function closePopup(popup) {\r\n  document.removeEventListener(\"keydown\", closePopupEsc);\r\n  popup.classList.remove(\"popup_is-opened\");\r\n}\r\n\r\n// функция закрытия попапа нажатием на оверлей\r\nexport function closePopupOverlay(event) {\r\n      if (event.target === event.currentTarget) {\r\n        closePopup(event.currentTarget);\r\n      }\r\n    };\r\n\r\n// функция закрытия попапа нажатием на Esc\r\nexport function closePopupEsc(event) {\r\n  if (event.key === \"Escape\") {\r\n    const popupOpened = document.querySelector(\".popup_is-opened\");\r\n    closePopup(popupOpened);\r\n  }\r\n}","import { initialCards } from \"./cards.js\";\r\n\r\nimport {\r\n  createCard,\r\n  delCard,\r\n  likeCard,\r\n} from \"../components/card.js\";\r\n\r\nimport {\r\n  openPopup,\r\n  closePopup,\r\n  closePopupOverlay,\r\n} from \"../components/modal.js\";\r\n\r\nconst popupEditButtonOpen = document.querySelector(\".profile__edit-button\");\r\nconst popupNewCardButtonOpen = document.querySelector(\".profile__add-button\");\r\n\r\nconst popupEdit = document.querySelector(\".popup_type_edit\");\r\nconst popupNewCard = document.querySelector(\".popup_type_new-card\");\r\nconst popupZoom = document.querySelector(\".popup_type_image\");\r\n\r\nconst popupZoomImg = document.querySelector(\".popup__image\");\r\nconst popupZoomTitle = document.querySelector(\".popup__caption\");\r\n\r\nconst popupInputNewCardTitle = document.querySelector(\r\n  \".popup__input_type_card-name\"\r\n);\r\nconst popupInputNewCardImg = document.querySelector(\".popup__input_type_url\");\r\n\r\nconst profileInfoTitle = document.querySelector(\".profile__title\");\r\nconst profileInfoDescription = document.querySelector(\r\n  \".profile__description\"\r\n);\r\n\r\n// Находим форму в DOM\r\nconst formElement = document.querySelector(\".popup__form\");\r\nconst formCreateNC = document.forms.newplace;\r\n\r\n// Находим поля формы в DOM\r\nconst nameInput = formElement.querySelector(\".popup__input_type_name\");\r\nconst jobInput = formElement.querySelector(\r\n  \".popup__input_type_description\"\r\n);\r\n\r\n// @todo: DOM узлы\r\n\r\nconst cardsContainer = document.querySelector(\".places__list\");\r\n\r\n// @todo: Вывести карточки на страницу\r\n\r\nfunction addCard(cardsDataArray) {\r\n  cardsDataArray.forEach((cardData) => {\r\n    const cardImg = cardData.link;\r\n    const cardTitle = cardData.name;\r\n\r\n    const card = createCard(cardImg, cardTitle, delCard, likeCard, handleOpenPopupZoom);\r\n    cardsContainer.append(card);\r\n  });\r\n}\r\n\r\n//функция открытия попапа просмотра фото\r\nfunction openPopupZoom(imageSrc, titleText) {\r\n\r\n  popupZoomImg.src = imageSrc;\r\n  popupZoomImg.alt = titleText;\r\n  popupZoomTitle.textContent = titleText;\r\n\r\n  openPopup(popupZoom);\r\n}\r\n\r\n//Обработчик открытия попапа увеличения фото\r\nfunction handleOpenPopupZoom(event) {\r\n\r\n  const cardImg = event.target;\r\n\r\n  const card = cardImg.closest(\".card\");\r\n  const cardTitle = card.querySelector(\".card__title\").textContent;\r\n\r\n  openPopupZoom(cardImg.src, cardTitle);\r\n};\r\n\r\n//функция создания новой карточки\r\nfunction createNewCard(evt) {\r\n  evt.preventDefault();\r\n  //значение поля название\r\n  //значение поля ссылка на картинку\r\n  //значение кнопки сохранить - отрисовать новую карточку\r\n  const cardImg = popupInputNewCardImg.value;\r\n  const cardTitle = popupInputNewCardTitle.value;\r\n\r\n  //вешаем слушатель при нажатии на кнопку сохранить, берем эти значения и передаем функции\r\n  //создания createCard(img, title, functionDelCard)\r\n\r\n  const card = createCard(cardImg, cardTitle, delCard, likeCard, handleOpenPopupZoom);\r\n  cardsContainer.prepend(card);\r\n\r\n  //обнуляем импуты\r\n  popupInputNewCardImg.value = \"\";\r\n  popupInputNewCardTitle.value = \"\";\r\n\r\n  closePopup(popupNewCard);\r\n}\r\n\r\n// добавления слушателей и функции закрытия нажатием на крестик\r\nfunction addListenersclosePopup() {\r\n  const popupList = document.querySelectorAll(\".popup\");\r\n  const popupBtnCloseList = document.querySelectorAll(\".popup__close\");\r\n\r\n  popupBtnCloseList.forEach((popupBtn, index) => {\r\n    popupBtn.addEventListener(\"click\", () => {\r\n      closePopup(popupList[index]);\r\n    });\r\n  });\r\n}\r\n\r\n// добавления слушателей и функции закрытия попапа нажатием на оверлей\r\nfunction addListenersclosePopupOverlay() {\r\n  const popupList = Array.from(document.querySelectorAll(\".popup\"));\r\n\r\n  popupList.forEach((popupItem) => {\r\n    popupItem.addEventListener(\"mousedown\", closePopupOverlay)\r\n  })\r\n};\r\n\r\n//функция открытия попапа редактирования\r\nfunction openPopupEdit() {\r\n  nameInput.value = profileInfoTitle.textContent;\r\n  jobInput.value = profileInfoDescription.textContent;\r\n\r\n  nameInput.textContent = profileInfoTitle.value;\r\n  jobInput.textContent = profileInfoDescription.value;\r\n  openPopup(popupEdit);\r\n}\r\n\r\n// Обработчик изменения данных профиль и «отправки» формы, хотя пока\r\n// она никуда отправляться не будет\r\nfunction handleEditFormSubmit(evt) {\r\n  evt.preventDefault(); // Эта строчка отменяет стандартную отправку формы.\r\n\r\n  // Получите значение полей jobInput и nameInput из свойства value\r\n  const nameInputValue = nameInput.value;\r\n  const jobInputValue = jobInput.value;\r\n  // Выберите элементы, куда должны быть вставлены значения полей\r\n  // Вставьте новые значения с помощью textContent\r\n  profileInfoTitle.textContent = nameInputValue;\r\n  profileInfoDescription.textContent = jobInputValue;\r\n  closePopup(popupEdit);\r\n}\r\n\r\n//функция открытия попапа создания новой карточки\r\nfunction openPopupNewCard() {\r\n  openPopup(popupNewCard);\r\n}\r\n\r\n//слушатель открытия попапа редактирования\r\npopupEditButtonOpen.addEventListener(\"click\", openPopupEdit);\r\n\r\n//слушатель открытия попапа создания новой карточки\r\npopupNewCardButtonOpen.addEventListener(\"click\", openPopupNewCard);\r\n\r\n//слушатель создания новой карточки\r\nformCreateNC.addEventListener(\"submit\", createNewCard);\r\n\r\n// Прикрепляем обработчик к форме:\r\n// он будет следить за событием “submit” - «отправка»\r\nformElement.addEventListener(\"submit\", handleEditFormSubmit);\r\n\r\n//добавление слушателей закрытия попапа нажатием на крестик\r\naddListenersclosePopup();\r\n\r\naddCard(initialCards);\r\n\r\n//вызов функции закрытия попапа нажатием на оверлей\r\naddListenersclosePopupOverlay();","export const initialCards = [\r\n    {\r\n      name: \"Архыз\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg\",\r\n    },\r\n    {\r\n      name: \"Челябинская область\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg\",\r\n    },\r\n    {\r\n      name: \"Иваново\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg\",\r\n    },\r\n    {\r\n      name: \"Камчатка\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg\",\r\n    },\r\n    {\r\n      name: \"Холмогорский район\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg\",\r\n    },\r\n    {\r\n      name: \"Байкал\",\r\n      link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg\",\r\n    }\r\n];"],"names":["createCard","img","title","functionDelCard","functionLikeCard","handlerOpenPopupZoom","cardTemplate","document","querySelector","content","cardsContainer","cardElement","cloneNode","buttonDelCard","cardImg","cardTitle","src","alt","textContent","addEventListener","delCard","evt","target","closest","remove","likeCard","classList","contains","toggle","openPopup","popup","closePopupEsc","add","closePopup","removeEventListener","closePopupOverlay","event","currentTarget","key","popupList","popupEditButtonOpen","popupNewCardButtonOpen","popupEdit","popupNewCard","popupZoom","popupZoomImg","popupZoomTitle","popupInputNewCardTitle","popupInputNewCardImg","profileInfoTitle","profileInfoDescription","formElement","formCreateNC","forms","newplace","nameInput","jobInput","handleOpenPopupZoom","imageSrc","titleText","value","preventDefault","card","prepend","nameInputValue","jobInputValue","querySelectorAll","forEach","popupBtn","index","name","link","cardData","append","Array","from","popupItem"],"sourceRoot":""}