{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/webpack/bootstrap","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// @todo: Функция создания карточки\r\n\r\nexport function createCard(img, title, functionDelCard, functionLikeCard, handlerOpenPopupZoom, cardOwnerId, currentUserId, handleOpenDeletePopup) {\r\n  const cardTemplate = document.querySelector(\"#card-template\").content;\r\n  const cardsContainer = document.querySelector(\".places__list\");\r\n  const cardElement = cardTemplate.querySelector(\".card\").cloneNode(true);\r\n  const buttonDelCard = cardElement.querySelector(\".card__delete-button\");\r\n  const cardImg = cardElement.querySelector(\".card__image\");\r\n  const cardTitle = cardElement.querySelector(\".card__title\");\r\n\r\n  cardImg.src = img;\r\n  cardImg.alt = title;\r\n  cardTitle.textContent = title;\r\n\r\n  // проверка на владельца карточки\r\n  if (cardOwnerId !== currentUserId) {\r\n    buttonDelCard.remove(); // Удаляем кнопку, если карточка создана не текущим пользователем\r\n  } else {\r\n    buttonDelCard.addEventListener(\"click\", () => handleOpenDeletePopup(cardElement, functionDelCard)); // Вешаем событие только на свои карточки\r\n  }\r\n\r\n  cardsContainer.addEventListener(\"click\", functionLikeCard);\r\n  cardImg.addEventListener(\"click\", handlerOpenPopupZoom);\r\n\r\n  return cardElement;\r\n}\r\n\r\n// @todo: Функция удаления карточки\r\n\r\nexport function delCard(evt) {\r\n  evt.target.closest(\".card\").remove();\r\n}\r\n\r\n//лайк карточки\r\nexport function likeCard(evt) {\r\n  if (evt.target.classList.contains(\"card__like-button\")) {\r\n    evt.target.classList.toggle(\"card__like-button_is-active\");\r\n  }\r\n}\r\n","export const validationConfig = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"popup__button_submit_inactive\",\r\n  inputErrorClass: \"popup__input_type_error\",\r\n  errorClass: \"popup__input-error_active\",\r\n};\r\n\r\nconst showInputError = (formElement, inputElement, errorMessage) => {\r\n  // Находим элемент ошибки внутри самой функции\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  // Остальной код такой же\r\n  inputElement.classList.add(validationConfig.inputErrorClass);\r\n  errorElement.textContent = errorMessage;\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n};\r\n\r\nconst hideInputError = (formElement, inputElement) => {\r\n  // Находим элемент ошибки\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  // Остальной код такой же\r\n  inputElement.classList.remove(validationConfig.inputErrorClass);\r\n  errorElement.classList.remove(validationConfig.errorClass);\r\n  errorElement.textContent = \"\";\r\n};\r\n\r\n// Функция принимает массив полей\r\n\r\nconst hasInvalidInput = (inputList) => {\r\n  // проходим по этому массиву методом some\r\n  return inputList.some((inputElement) => {\r\n    // Если поле не валидно, колбэк вернёт true\r\n    // Обход массива прекратится и вся функция\r\n    // hasInvalidInput вернёт true\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\n// Функция isValid теперь принимает formElement и inputElement,\r\n// а не берёт их из внешней области видимости\r\n\r\nconst isValid = (formElement, inputElement) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    // встроенный метод setCustomValidity принимает на вход строку\r\n    // и заменяет ею стандартное сообщение об ошибке\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    // если передать пустую строку, то будут доступны\r\n    // стандартные браузерные сообщения\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n\r\n  if (!inputElement.validity.valid) {\r\n    // теперь, если ошибка вызвана регулярным выражением,\r\n    // переменная validationMessage хранит наше кастомное сообщение\r\n    showInputError(formElement, inputElement, inputElement.validationMessage);\r\n  } else {\r\n    hideInputError(formElement, inputElement);\r\n  }\r\n};\r\n\r\n// Функция принимает массив полей ввода\r\n// и элемент кнопки, состояние которой нужно менять\r\n\r\nconst toggleButtonState = (inputList, buttonElement) => {\r\n  // Если есть хотя бы один невалидный инпут\r\n  if (hasInvalidInput(inputList)) {\r\n    // сделай кнопку неактивной\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n  } else {\r\n    // иначе сделай кнопку активной\r\n    buttonElement.disabled = false;\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n  }\r\n};\r\n\r\nconst setEventListeners = (formElement, validationConfig) => {\r\n  // Находим все поля внутри формы,\r\n  // сделаем из них массив методом Array.from\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(validationConfig.inputSelector)\r\n  );\r\n  const buttonElement = formElement.querySelector(\r\n    validationConfig.submitButtonSelector\r\n  );\r\n  // Вызовем toggleButtonState и передадим ей массив полей и кнопку\r\n  toggleButtonState(inputList, buttonElement);\r\n  // Обойдём все элементы полученной коллекции\r\n  inputList.forEach((inputElement) => {\r\n    // каждому полю добавим обработчик события input\r\n    inputElement.addEventListener(\"input\", () => {\r\n      // Внутри колбэка вызовем isValid,\r\n      // передав ей форму и проверяемый элемент\r\n      isValid(formElement, inputElement);\r\n      // Вызовем toggleButtonState и передадим ей массив полей и кнопку\r\n      toggleButtonState(inputList, buttonElement);\r\n    });\r\n  });\r\n};\r\n\r\nexport const enableValidation = (validationConfig) => {\r\n  // Найдём все формы с указанным классом в DOM,\r\n  // сделаем из них массив методом Array.from\r\n  const formList = Array.from(\r\n    document.querySelectorAll(validationConfig.formSelector)\r\n  );\r\n  // Переберём полученную коллекцию\r\n  formList.forEach((formElement) => {\r\n    // Для каждой формы вызовем функцию setEventListeners,\r\n    // передав ей элемент формы\r\n    setEventListeners(formElement, validationConfig);\r\n  });\r\n};\r\n\r\n// Функция clearValidation, которая очищает\r\n// ошибки валидации формы и делает кнопку отправки формы неактивной\r\n\r\n// Пройтись по всем элементам формы и удалить текст ошибок валидации\r\n// Убрать класс ошибок у соответствующих полей\r\n// Деактивировать кнопку отправки формы\r\n\r\nexport function clearValidation(formElement, validationConfig) {\r\n  // Удаляем текст ошибок валидации и классы ошибок у полей ввода\r\n  const inputElements = Array.from(\r\n    formElement.querySelectorAll(validationConfig.inputSelector)\r\n  );\r\n  inputElements.forEach((inputElement) => {\r\n    const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n    inputElement.classList.remove(validationConfig.inputErrorClass);\r\n    errorElement.textContent = \"\";\r\n    errorElement.classList.remove(validationConfig.errorClass);\r\n  });\r\n\r\n  // Деактивируем кнопку отправки формы\r\n  const submitButton = formElement.querySelector(\r\n    validationConfig.submitButtonSelector\r\n  );\r\n  submitButton.classList.add(validationConfig.inactiveButtonClass);\r\n  submitButton.disabled = true;\r\n}","// функция открытия попапа\r\nexport function openPopup(popup) {\r\n  document.addEventListener(\"keydown\", closePopupEsc);\r\n  popup.classList.add(\"popup_is-opened\");\r\n}\r\n\r\n// функция закрытия попапа\r\nexport function closePopup(popup) {\r\n  document.removeEventListener(\"keydown\", closePopupEsc);\r\n  popup.classList.remove(\"popup_is-opened\");\r\n}\r\n\r\n// функция закрытия попапа нажатием на оверлей\r\nexport function closePopupOverlay(event) {\r\n      if (event.target === event.currentTarget) {\r\n        closePopup(event.currentTarget);\r\n      }\r\n    };\r\n\r\n// функция закрытия попапа нажатием на Esc\r\nexport function closePopupEsc(event) {\r\n  if (event.key === \"Escape\") {\r\n    const popupOpened = document.querySelector(\".popup_is-opened\");\r\n    closePopup(popupOpened);\r\n  }\r\n}","import { createCard, delCard, likeCard } from \"../components/card.js\";\r\n\r\nimport {\r\n  validationConfig,\r\n  enableValidation,\r\n  clearValidation,\r\n} from \"../components/validation.js\";\r\n\r\nimport {\r\n  openPopup,\r\n  closePopup,\r\n  closePopupOverlay,\r\n} from \"../components/modal.js\";\r\n\r\nconst popupEditButtonOpen = document.querySelector(\".profile__edit-button\");\r\nconst popupNewCardButtonOpen = document.querySelector(\".profile__add-button\");\r\nconst popupDelCardButtonOpen = document.querySelector(\".card__delete-button\");\r\n\r\nconst popupEdit = document.querySelector(\".popup_type_edit\");\r\nconst popupAvatarUpdate = document.querySelector(\".popup_type_update-avatar\");\r\nconst popupDelCardQuestion = document.querySelector(\".popup_type_question\");\r\nconst popupNewCard = document.querySelector(\".popup_type_new-card\");\r\nconst popupZoom = document.querySelector(\".popup_type_image\");\r\n\r\nconst popupZoomImg = document.querySelector(\".popup__image\");\r\nconst popupZoomTitle = document.querySelector(\".popup__caption\");\r\n\r\nconst popupInputNewCardTitle = document.querySelector(\r\n  \".popup__input_type_card-name\"\r\n);\r\nconst popupInputNewCardImg = document.querySelector(\".popup__input_type_url\");\r\n\r\nconst profileAvatarImg = document.querySelector(\".profile__image\");\r\nconst profileInfoTitle = document.querySelector(\".profile__title\");\r\nconst profileInfoDescription = document.querySelector(\".profile__description\");\r\n\r\n// Находим форму в DOM\r\nconst formElement = document.querySelector(\".popup__form\");\r\nconst formCreateNC = document.forms.newplace;\r\n\r\n// Находим поля формы в DOM\r\nconst nameInput = formElement.querySelector(\".popup__input_type_name\");\r\nconst jobInput = formElement.querySelector(\".popup__input_type_description\");\r\n\r\n// @todo: DOM узлы\r\n\r\nconst cardsContainer = document.querySelector(\".places__list\");\r\n\r\n// @todo: Вывести карточки на страницу\r\n\r\n// Функция добавления карточки на страницу\r\nfunction addCard(cardsDataArray, currentUserId) {\r\n  cardsDataArray.forEach((cardData) => {\r\n    const cardImg = cardData.link;\r\n    const cardTitle = cardData.name;\r\n\r\n    const card = createCard(\r\n      cardImg,\r\n      cardTitle,\r\n      delCard,\r\n      likeCard,\r\n      handleOpenPopupZoom,\r\n      cardData.owner._id,\r\n      currentUserId,\r\n      (cardElement, delCardFunction) => {\r\n        // Открываю попап с вопросом об удалении карточки\r\n        openPopup(popupDelCardQuestion);\r\n      }\r\n    );\r\n    cardsContainer.append(card);\r\n  });\r\n}\r\n\r\n//функция открытия попапа просмотра фото\r\nfunction openPopupZoom(imageSrc, titleText) {\r\n  popupZoomImg.src = imageSrc;\r\n  popupZoomImg.alt = titleText;\r\n  popupZoomTitle.textContent = titleText;\r\n\r\n  openPopup(popupZoom);\r\n}\r\n\r\n//Обработчик открытия попапа увеличения фото\r\nfunction handleOpenPopupZoom(event) {\r\n  const cardImg = event.target;\r\n\r\n  const card = cardImg.closest(\".card\");\r\n  const cardTitle = card.querySelector(\".card__title\").textContent;\r\n\r\n  openPopupZoom(cardImg.src, cardTitle);\r\n}\r\n\r\n// добавления слушателей и функции закрытия нажатием на крестик\r\nfunction addListenersclosePopup() {\r\n  const popupList = document.querySelectorAll(\".popup\");\r\n  const popupBtnCloseList = document.querySelectorAll(\".popup__close\");\r\n\r\n  popupBtnCloseList.forEach((popupBtn, index) => {\r\n    popupBtn.addEventListener(\"click\", () => {\r\n      closePopup(popupList[index]);\r\n    });\r\n  });\r\n}\r\n\r\n// добавления слушателей и функции закрытия попапа нажатием на оверлей\r\nfunction addListenersclosePopupOverlay() {\r\n  const popupList = Array.from(document.querySelectorAll(\".popup\"));\r\n\r\n  popupList.forEach((popupItem) => {\r\n    popupItem.addEventListener(\"mousedown\", closePopupOverlay);\r\n  });\r\n}\r\n\r\n//функция открытия попапа редактирования\r\nfunction openPopupEdit() {\r\n  nameInput.value = profileInfoTitle.textContent;\r\n  jobInput.value = profileInfoDescription.textContent;\r\n\r\n  nameInput.textContent = profileInfoTitle.value;\r\n  jobInput.textContent = profileInfoDescription.value;\r\n  clearValidation(formElement, validationConfig);\r\n  openPopup(popupEdit);\r\n}\r\n\r\n//функция открытия попапа создания новой карточки\r\nfunction openPopupNewCard() {\r\n  popupInputNewCardImg.value = \"\";\r\n  popupInputNewCardTitle.value = \"\";\r\n  clearValidation(formCreateNC, validationConfig);\r\n  openPopup(popupNewCard);\r\n}\r\n\r\n//слушатель открытия попапа редактирования\r\npopupEditButtonOpen.addEventListener(\"click\", openPopupEdit);\r\n\r\n//слушатель открытия попапа смены аватара\r\nprofileAvatarImg.addEventListener(\"click\", () => openPopup(popupAvatarUpdate));\r\n\r\n//слушатель открытия попапа создания новой карточки\r\npopupNewCardButtonOpen.addEventListener(\"click\", openPopupNewCard);\r\n\r\n//слушатель создания новой карточки\r\nformCreateNC.addEventListener(\"submit\", createNewCard);\r\n\r\n// Прикрепляем обработчик к форме:\r\n// он будет следить за событием “submit” - «отправка»\r\nformElement.addEventListener(\"submit\", handleEditFormSubmit);\r\n\r\n//добавление слушателей закрытия попапа нажатием на крестик\r\naddListenersclosePopup();\r\n\r\n//вызов функции закрытия попапа нажатием на оверлей\r\naddListenersclosePopupOverlay();\r\n\r\n// Вызовем функцию\r\n// включение валидации вызовом enableValidation\r\n// все настройки передаются при вызове\r\nenableValidation(validationConfig);\r\n\r\n//запрос на сервер для получения обьекта с первоначальными данными пользователя\r\nfunction getInitialUser() {\r\n  return fetch(\"https://mesto.nomoreparties.co./v1/wff-cohort-21/users/me\", {\r\n    headers: {\r\n      authorization: \"adfb87df-3032-40f6-8edf-de055a5b3295\",\r\n    },\r\n  })\r\n    .then((res) => {\r\n      if (!res.ok) {\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      }\r\n      return res.json();\r\n    })\r\n    .then((result) => {\r\n      console.log(result);\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    });\r\n}\r\n\r\n// Функция для обновления информации профиля\r\nfunction updateProfileInfo(name, about, avatar) {\r\n  profileInfoTitle.textContent = name;\r\n  profileInfoDescription.textContent = about;\r\n  profileAvatarImg.style.backgroundImage = `url('${avatar}')`;\r\n}\r\n\r\n//запрос на сервер для получения массива обьектов с данными карточек других пользователей\r\nfunction getCardsDescription() {\r\n  return fetch(\"https://mesto.nomoreparties.co./v1/wff-cohort-21/cards\", {\r\n    headers: {\r\n      authorization: \"adfb87df-3032-40f6-8edf-de055a5b3295\",\r\n    },\r\n  })\r\n    .then((res) => {\r\n      if (!res.ok) {\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      }\r\n      return res.json();\r\n    })\r\n    .then((result) => {\r\n      console.log(result);\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    });\r\n}\r\n\r\nPromise.all([getInitialUser(), getCardsDescription()])\r\n  .then(([dataUser, dataCards]) => {\r\n    const currentUserId = dataUser._id; //мой id\r\n\r\n    // Обновляем информацию о пользователе\r\n    updateProfileInfo(dataUser.name, dataUser.about, dataUser.avatar);\r\n    addCard(dataCards, currentUserId);\r\n  })\r\n  .catch((err) => {\r\n    console.log(err);\r\n  });\r\n\r\n// Функция для обновления профиля на сервере\r\nfunction renameUserData(name, about) {\r\n  return fetch(\"https://mesto.nomoreparties.co./v1/wff-cohort-21/users/me\", {\r\n    method: \"PATCH\",\r\n    headers: {\r\n      authorization: \"adfb87df-3032-40f6-8edf-de055a5b3295\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      name: name,\r\n      about: about,\r\n    }),\r\n  })\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        return Promise.reject(`Ошибка: ${response.status}`);\r\n      }\r\n      return response.json();\r\n    })\r\n    .then((data) => {\r\n      console.log(\"Профиль обновлен:\", data);\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      console.error(\"Ошибка при обновлении профиля:\", err);\r\n    });\r\n}\r\n\r\n// Обработчик изменения данных профиль и «отправки» формы\r\nfunction handleEditFormSubmit(evt) {\r\n  evt.preventDefault(); // Эта строчка отменяет стандартную отправку формы.\r\n\r\n  // Получите значение полей jobInput и nameInput из свойства value\r\n  const nameInputValue = nameInput.value;\r\n  const jobInputValue = jobInput.value;\r\n\r\n  renameUserData(nameInputValue, jobInputValue).then((updatedData) => {\r\n    // Обновление DOM с новыми данными профиля\r\n    profileInfoTitle.textContent = updatedData.name;\r\n    profileInfoDescription.textContent = updatedData.about;\r\n  });\r\n  closePopup(popupEdit);\r\n}\r\n\r\nfunction createNewCard(evt) {\r\n  evt.preventDefault();\r\n\r\n  // Получаем значения полей\r\n  const cardImg = popupInputNewCardImg.value;\r\n  const cardTitle = popupInputNewCardTitle.value;\r\n\r\n  // Отправляем POST-запрос на сервер для создания новой карточки\r\n  fetch(\"https://mesto.nomoreparties.co./v1/wff-cohort-21/cards\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      authorization: \"adfb87df-3032-40f6-8edf-de055a5b3295\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      name: cardTitle,\r\n      link: cardImg,\r\n    }),\r\n  })\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        return Promise.reject(`Ошибка: ${response.status}`);\r\n      }\r\n      console.log(response);\r\n      return response.json();\r\n    })\r\n    .then((newCardData) => {\r\n      // Создаем карточку с использованием данных из ответа сервера\r\n      const card = createCard(\r\n        newCardData.link,\r\n        newCardData.name,\r\n        delCard,\r\n        likeCard,\r\n        handleOpenPopupZoom\r\n      );\r\n\r\n      // Добавляем карточку в контейнер\r\n      cardsContainer.prepend(card);\r\n\r\n      // Обнуляем поля ввода\r\n      popupInputNewCardImg.value = \"\";\r\n      popupInputNewCardTitle.value = \"\";\r\n      clearValidation(formCreateNC, validationConfig);\r\n\r\n      // Закрываем попап после добавления карточки\r\n      closePopup(popupNewCard);\r\n    })\r\n    .catch((err) => {\r\n      console.error(\"Ошибка при добавлении карточки на сервер:\", err);\r\n    });\r\n}\r\n\r\n// Токен: adfb87df-3032-40f6-8edf-de055a5b3295\r\n// Идентификатор группы: wff-cohort-21\r\n\r\n// Задать вопрос наставнику на Q&A\r\n\r\n//1 getCardsDescription().then(cardsData => {\r\n//   addCard(cardsData);\r\n// }\r\n// );\r\n\r\n// вот так работает, а так нет\r\n\r\n// function getCardsData() {\r\n//   const cardsDataArray = getCardsDescription;\r\n\r\n// addCard(cardsDataArray);\r\n\r\n// }\r\n\r\n// // Вызов функции для загрузки и отображения карточек\r\n// getCardsData();\r\n\r\n// почему!??!\r\n\r\n//2 Как изменить запятую на точку в ответе сервера? развемы можем менять данные ответа?\r\n"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","createCard","img","title","functionDelCard","functionLikeCard","handlerOpenPopupZoom","cardOwnerId","currentUserId","handleOpenDeletePopup","cardTemplate","document","querySelector","content","cardsContainer","cardElement","cloneNode","buttonDelCard","cardImg","cardTitle","src","alt","textContent","remove","addEventListener","delCard","evt","target","closest","likeCard","classList","contains","toggle","validationConfig","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","isValid","formElement","inputElement","validity","patternMismatch","setCustomValidity","dataset","errorMessage","valid","errorElement","concat","id","hideInputError","add","showInputError","validationMessage","toggleButtonState","inputList","buttonElement","some","hasInvalidInput","disabled","clearValidation","Array","from","querySelectorAll","forEach","submitButton","openPopup","popup","closePopupEsc","closePopup","removeEventListener","closePopupOverlay","event","currentTarget","key","popupList","popupEditButtonOpen","popupNewCardButtonOpen","popupEdit","popupAvatarUpdate","popupDelCardQuestion","popupNewCard","popupZoom","popupZoomImg","popupZoomTitle","popupInputNewCardTitle","popupInputNewCardImg","profileAvatarImg","profileInfoTitle","profileInfoDescription","formCreateNC","forms","newplace","nameInput","jobInput","handleOpenPopupZoom","imageSrc","titleText","value","preventDefault","fetch","method","headers","authorization","body","JSON","stringify","name","link","then","response","ok","console","log","json","Promise","reject","status","newCardData","card","prepend","catch","err","error","about","data","updatedData","popupBtn","index","popupItem","setEventListeners","enableValidation","all","res","result","_ref","avatar","_ref2","dataUser","dataCards","_id","style","backgroundImage","cardsDataArray","cardData","owner","delCardFunction","append","addCard"],"sourceRoot":""}